.\" This manpage has been automatically generated by docbook2man 
.\" from a DocBook document.  This tool can be found at:
.\" <http://shell.ipoline.com/~elmert/comp/docbook2X/> 
.\" Please send any bug reports, improvements, comments, patches, 
.\" etc. to Steve Cheng <steve@ggi-project.org>.
.TH "WPA-CUTE" "8" "19 July 2022" "" ""

.SH NAME
wpaCute \- A graphical wpa_supplicant front end
.SH SYNOPSIS

\fBwpa-cute\fR [ \fB-i \fIifname\fB\fR ] [ \fB-m \fIseconds\fB\fR ] [ \fB-N\fR ] [ \fB-p \fIpath-to-ctrl-sockets\fB\fR ] [ \fB-q\fR ] [ \fB-t\fR ] [ \fB-W\fR ]

.SH "OVERVIEW"
.PP
wpaCute is a graphical Qt front end program for interacting
with wpa_supplicant. It's used to query current status, change
configuration and request interactive user input.
.PP
It supports (almost) all of the interactive status and
configuration features of the command line client, wpa_cli. Refer
to the wpa_cli man page for a comprehensive list of the interactive
mode features.
.PP
wpaCute is a fork from wpa_gui, shipped with wpa_supplicant
version 2.6
.SH "COMMAND ARGUMENTS"
.TP
\fB-i ifname\fR
Specify the interface that is be configured.
Without \fB-i\fR choose the first interface found in the socket path
which start not with 'p2p-dev-' otherwise the last found interface is chosen.
.TP
\fB-m seconds\fR
Set an independent update interval in seconds for the signal
strength meter.

This value must be a positive integer. Without \fB-m\fR the
signal meter is only updated at each status update.
See also the notes about polling and pinging.
.TP
\fB-N\fR
Force not to use QSocketNotifier, use only polling.
It's more for testing purposes.
.TP
\fB-p path\fR
Change the path where control sockets should
be found.
.TP
\fB-q\fR
Run program in the quiet mode - do not display tray
icon pop-up messages.
.TP
\fB-t\fR
Start program in the system tray only (if the window
manager supports it). By default the main status window is
shown.
.TP
\fB-W\fR
Unset setting - Disable network after "WRONG_KEY"

This a workaround to a wpa_supplicant quirk where he endless tries to
connect to a wrong configured network. There are cases where it is a good idea,
but I believe it is mostly annoying due to it's implementation. If I'm wrong,
use \fB-W\fR to have the original behavior. By default will now a
network disabled after a "WRONG_KEY" message.
.SH "THINGS OF INTEREST"
.SS "POLLING AND PINGING"
.PP
On systems where QSocketNotifier is not supported is wpa_supplicant only
polled to fetch status changes.
.PP
One ambitious development goal was to drop the need for Polling & Pinging
on systems where QSocketNotifier is supported. But it turned out that this
was a road to ruin due to the lack of some 'Status Has Changed Message' from
wpa_supplicant. And finally would than still the problem be left that
wpa_supplicant could silently die without some sigh. So, we are doomed to poll!
.PP
The polling is now not done in a fixed interval but depends on
current status and reach from high frequent polling in 1sec, when
probably changes are on the way, down to 20sec in some static status where
primarily is checked if someone is still alive.
.PP
With the main window visible is polled in 5sec.
Only in case of an fatal error is polling halted, which e.g. occurs when the user
not belongs to the configured 'ctrl_interface_group=foo'.
.SS "EDIT NETWORK"
.PP
The window morphs its look to show always only what is needed, or can be
used, to some selections you made. If you encounter some misbehavior please
report.
.PP
Entered secrets will not shown again when you edit a network. Only a
hint that there is a password or key saved. I'm not a friend of that because
while messing around to get a connect you can't check if you miss typed the
password or something different is the problem.
.PP
When you add, delete or modify a network are these changes only made in
a temporary manner inside the running wpa_supplicant. They take effect as long
as the wpa_supplicant is not terminated or triggered to reload its
configuration. You have to save the changes explicit. This is different from
the original wpa_gui.
.PP
Right now is the behavior, which data are changed (send to
wpa_supplicant) not coherent. It depends sometimes if they are visible when
you "Apply" or not. Your removed data are not every time forced to remove by
wpa_supplicant. It's a little messy, sorry. Needs love and reports.
.PP
Right now will no data explicit removed when they are not visible. The
wpa_supplicant documentation describes that you can have a pretty mix of
possible settings which are all tested when wpa_supplicant tries to connect
to some access point. I'm not sure if this is really a smart decision.
.PP
Long story, short sense: Don't expect to have a "clean" configured
network block in your config file after you have clicked around to find a
working setup.
.SS "PEERS"
.PP
While transforming some code from old-school C/C++ to a more Qt like
style, I noticed some wpa control request that are not, or in a different way,
supported by wpa_cli. So you may encounter some disappointments. I haven't
played much with the peers window.
.SH "SEE ALSO"
.PP
\fBwpa_cli\fR(8)
\fBwpa_supplicant\fR(8)
.SH "LEGAL"
.PP
This program is licensed under the BSD license (the one with
advertisement clause removed).

.nf
wpaCute - A graphical wpa_supplicant front end
Copyright (C) 2018, 2022, 2024 loh.tar@googlemail.com

wpa_gui for wpa_supplicant
Copyright (C) 2003-2015 Jouni Malinen <j@w1.fi> and contributors.
.fi
