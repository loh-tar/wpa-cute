<!doctype refentry PUBLIC "-//OASIS//DTD DocBook V4.1//EN">

<refentry>
  <refmeta>
    <refentrytitle>wpa-cute</refentrytitle>
    <manvolnum>8</manvolnum>
  </refmeta>
  <refnamediv>
    <refname>wpaCute</refname>

    <refpurpose>A graphical wpa_supplicant front end</refpurpose>
  </refnamediv>

  <refsynopsisdiv>
    <cmdsynopsis>
      <command>wpa-cute</command>
      <arg>-i <replaceable>ifname</replaceable></arg>
      <arg>-m <replaceable>seconds</replaceable></arg>
      <arg>-N</arg>
      <arg>-p <replaceable>path-to-ctrl-sockets</replaceable></arg>
      <arg>-q</arg>
      <arg>-t</arg>
      <arg>-W</arg>
    </cmdsynopsis>
  </refsynopsisdiv>

  <refsect1>
    <title>Overview</title>

    <para>wpaCute is a graphical Qt front end program for interacting
    with wpa_supplicant. It's used to query current status, change
    configuration and request interactive user input.</para>

    <para>It supports (almost) all of the interactive status and
    configuration features of the command line client, wpa_cli. Refer
    to the wpa_cli man page for a comprehensive list of the interactive
    mode features.</para>

    <para>wpaCute is a fork from wpa_gui, shipped with wpa_supplicant
    version 2.6</para>
  </refsect1>
  <refsect1>
    <title>Command Arguments</title>
    <variablelist>
      <varlistentry>
  <term>-i ifname</term>
  <listitem><para>Specify the interface that is be configured.
  Without <option>-i</option> choose the first interface found in the socket path
  which start not with 'p2p-dev-' otherwise the last found interface is chosen.</para></listitem>
      </varlistentry>

      <varlistentry>
  <term>-m seconds</term>
  <listitem><para>Set an independent update interval in seconds for the signal
  strength meter.</para>
  <para>This value must be a positive integer. Without <option>-m</option> the
  signal meter is only updated at each status update.
  See also the notes about polling and pinging.</para></listitem>
      </varlistentry>

      <varlistentry>
  <term>-N</term>
  <listitem><para>Force not to use QSocketNotifier, use only polling.
  It's more for testing purposes.</para></listitem>
      </varlistentry>

      <varlistentry>
  <term>-p path</term>
  <listitem><para>Change the path where control sockets should
  be found.</para></listitem>
      </varlistentry>

      <varlistentry>
  <term>-q</term>
  <listitem><para>Run program in the quiet mode - do not display tray
  icon pop-up messages.</para></listitem>
      </varlistentry>

      <varlistentry>
  <term>-t</term>
  <listitem><para>Start program in the system tray only (if the window
  manager supports it). By default the main status window is
  shown.</para></listitem>
      </varlistentry>

      <varlistentry>
  <term>-W</term>
  <listitem><para>Unset setting - Disable network after "WRONG_KEY"</para>
  <para>This a workaround to a wpa_supplicant quirk where he endless tries to
  connect to a wrong configured network. There are cases where it is a good idea,
  but I believe it is mostly annoying due to it's implementation. If I'm wrong,
  use <option>-W</option> to have the original behavior. By default will now a
  network disabled after a "WRONG_KEY" message.
  </para>
  </listitem>
      </varlistentry>

    </variablelist>
  </refsect1>

  <refsect1><title>Things Of Interest</title>

  <refsect2><title>Polling And Pinging</title>

  <para>On systems where QSocketNotifier is not supported is wpa_supplicant only
  polled to fetch status changes.
  </para>
  <para>One ambitious development goal was to drop the need for Polling & Pinging
  on systems where QSocketNotifier is supported. But it turned out that this
  was a road to ruin due to the lack of some 'Status Has Changed Message' from
  wpa_supplicant. And finally would than still the problem be left that
  wpa_supplicant could silently die without some sigh. So, we are doomed to poll!
  </para>
  <para>The polling is now not done in a fixed interval but depends on
  current status and reach from high frequent polling in 1sec, when
  probably changes are on the way, down to 20sec in some static status where
  primarily is checked if someone is still alive.
  </para>
  <para>With the main window visible is polled in 5sec.
  Only in case of an fatal error is polling halted, which e.g. occurs when the user
  not belongs to the configured 'ctrl_interface_group=foo'.
  </para>
  </refsect2>

  <refsect2><title>Edit Network</title>

  <para>The window morphs its look to show always only what is needed, or can be
  used, to some selections you made. If you encounter some misbehavior please
  report.
  </para>
  <para>Entered secrets will not shown again when you edit a network. Only a
  hint that there is a password or key saved. I'm not a friend of that because
  while messing around to get a connect you can't check if you miss typed the
  password or something different is the problem.
  </para>
  <para>When you add, delete or modify a network are these changes only made in
  a temporary manner inside the running wpa_supplicant. They take effect as long
  as the wpa_supplicant is not terminated or triggered to reload its
  configuration. You have to save the changes explicit. This is different from
  the original wpa_gui.
  </para>
  <para>Right now is the behavior, which data are changed (send to
  wpa_supplicant) not coherent. It depends sometimes if they are visible when
  you "Apply" or not. Your removed data are not every time forced to remove by
  wpa_supplicant. It's a little messy, sorry. Needs love and reports.
  </para>
  <para>Right now will no data explicit removed when they are not visible. The
  wpa_supplicant documentation describes that you can have a pretty mix of
  possible settings which are all tested when wpa_supplicant tries to connect
  to some access point. I'm not sure if this is really a smart decision.
  </para>
  <para>Long story, short sense: Don't expect to have a "clean" configured
  network block in your config file after you have clicked around to find a
  working setup.
  </para>
  <para>The data in the IDString field on the Optional Settings tab will be shown
  in the Flags column of the Networks list. This is a kind of ploy to make it
  easier to distinguish between identically or very similar named but different networks.
  </para>
  <para>If the edit window does not offer some required settings option you need,
   you can also edit the configuration file by hand or using wpa_cli. You can
   then use wpaCute to select the network on or off as usual. Do not hesitate to
   fill out a bug report on the project page or directly by mail to the author.
  </para>
  </refsect2>

  <refsect2><title>Peers</title>
  <para>While transforming some code from old-school C/C++ to a more Qt like
  style, I noticed some wpa control request that are not, or in a different way,
  supported by wpa_cli. So you may encounter some disappointments. I haven't
  played much with the peers window.
  </para>
  </refsect2>

  </refsect1>
  <refsect1><title>See Also</title>

    <para>
      <citerefentry>
        <refentrytitle>wpa_cli</refentrytitle>
        <manvolnum>8</manvolnum>
      </citerefentry>
      <citerefentry>
        <refentrytitle>wpa_supplicant</refentrytitle>
        <manvolnum>8</manvolnum>
      </citerefentry>
    </para>
  </refsect1>

  <refsect1><title>Legal</title>
    <para>This program is licensed under the BSD license (the one with
    advertisement clause removed).</para>
    <literallayout>
wpaCute - A graphical wpa_supplicant front end
Copyright (C) 2018, 2022, 2024 loh.tar@googlemail.com

wpa_gui for wpa_supplicant
Copyright (C) 2003-2015 Jouni Malinen <email>j@w1.fi</email> and contributors.
</literallayout>
  </refsect1>
</refentry>
